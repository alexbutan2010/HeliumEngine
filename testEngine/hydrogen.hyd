// Counter Component
component Counter {
    state {
        count: 0
    }

    template {
        <div class="counter-container">
            <h3>Counter Component</h3>
            <div class="counter-display">Count: {state.count}</div>
            <div class="counter-buttons">
                <button @click="decrement">-</button>
                <button @click="increment">+</button>
            </div>
        </div>
    }

    methods {
        increment() {
            this.state.count++
        }

        decrement() {
            this.state.count--
        }
    }
}

// Todo List Component
component TodoList {
    state {
        todos: []
        newTodo: ""
    }

    template {
        <div class="todo-container">
            <h3>Todo List Component</h3>
            <form @submit.prevent="addTodo">
                <input 
                    type="text" 
                    v-model="state.newTodo" 
                    placeholder="Add new todo..."
                >
                <button type="submit">Add</button>
            </form>
            <ul class="todo-list">
                <li v-for="(todo, index) in state.todos" :key="index">
                    <span>{todo}</span>
                    <button @click="removeTodo(index)">Delete</button>
                </li>
            </ul>
        </div>
    }

    methods {
        addTodo() {
            if (this.state.newTodo.trim()) {
                this.state.todos.push(this.state.newTodo.trim())
                this.state.newTodo = ""
            }
        }

        removeTodo(index) {
            this.state.todos.splice(index, 1)
        }
    }
}

// Accordion Component
component Accordion {
    state {
        activeIndex: -1
    }

    template {
        <div class="accordion-container">
            <h3>Accordion Component</h3>
            <div class="accordion">
                <div 
                    v-for="(item, index) in props.items" 
                    :key="index"
                    class="accordion-item"
                >
                    <div 
                        class="accordion-header"
                        @click="toggle(index)"
                    >
                        {item.title}
                    </div>
                    <div 
                        class="accordion-content"
                        :class="{ active: state.activeIndex === index }"
                    >
                        {item.content}
                    </div>
                </div>
            </div>
        </div>
    }

    methods {
        toggle(index) {
            this.state.activeIndex = this.state.activeIndex === index ? -1 : index
        }
    }
}

// Modal Component
component Modal {
    state {
        isOpen: false
    }

    template {
        <div>
            <button @click="openModal">Open Modal</button>
            <div class="modal" v-if="state.isOpen">
                <div class="modal-content">
                    <span class="close" @click="closeModal">&times;</span>
                    <h3>Modal Component</h3>
                    <p>This is a modal dialog.</p>
                </div>
            </div>
        </div>
    }

    methods {
        openModal() {
            this.state.isOpen = true
        }

        closeModal() {
            this.state.isOpen = false
        }
    }
}

// Form Component
component Form {
    state {
        formData: {
            name: "",
            email: "",
            message: ""
        }
    }

    template {
        <div class="form-container">
            <h3>Form Component</h3>
            <form @submit.prevent="submitForm">
                <div class="form-group">
                    <label>Name:</label>
                    <input 
                        type="text" 
                        v-model="state.formData.name"
                        required
                    >
                </div>
                <div class="form-group">
                    <label>Email:</label>
                    <input 
                        type="email" 
                        v-model="state.formData.email"
                        required
                    >
                </div>
                <div class="form-group">
                    <label>Message:</label>
                    <textarea 
                        v-model="state.formData.message"
                        required
                    ></textarea>
                </div>
                <button type="submit">Submit</button>
            </form>
        </div>
    }

    methods {
        submitForm() {
            if (this.validateForm()) {
                alert("Form submitted successfully!")
                this.state.formData = {
                    name: "",
                    email: "",
                    message: ""
                }
            }
        }

        validateForm() {
            return (
                this.state.formData.name &&
                this.state.formData.email &&
                this.state.formData.message
            )
        }
    }
}

// Animation Component
component Animation {
    state {
        isPlaying: false
    }

    template {
        <div class="animation-container">
            <h3>Animation Component</h3>
            <div 
                class="animation-box"
                :class="{ playing: state.isPlaying }"
            ></div>
            <button @click="toggleAnimation">
                {state.isPlaying ? "Pause" : "Play"} Animation
            </button>
        </div>
    }

    methods {
        toggleAnimation() {
            this.state.isPlaying = !this.state.isPlaying
        }
    }
}

// Media Player Component
component MediaPlayer {
    state {
        isPlaying: false
        isMuted: false
    }

    template {
        <div class="media-container">
            <h3>Media Player Component</h3>
            <video 
                ref="video"
                src="sample.mp4"
                :muted="state.isMuted"
            ></video>
            <div class="media-controls">
                <button @click="togglePlay">
                    {state.isPlaying ? "Pause" : "Play"}
                </button>
                <button @click="toggleMute">
                    {state.isMuted ? "Unmute" : "Mute"}
                </button>
            </div>
        </div>
    }

    methods {
        togglePlay() {
            const video = this.$refs.video
            if (this.state.isPlaying) {
                video.pause()
            } else {
                video.play()
            }
            this.state.isPlaying = !this.state.isPlaying
        }

        toggleMute() {
            this.state.isMuted = !this.state.isMuted
        }
    }
} 